Ambiente virtual:

1. python -m venv .venv

Windows:
2. Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass
3. .venv\Scripts\activate

Linux:
source ./.venv/bin/activate


TUTORIAL:

1. VERIFICAR SE O PYTHON ESTÁ RODANDO NAS MÁQUINAS
    1.1 Criar arquivo "main.py" com "print("Hello World!")"


2. INSTALAR FLASK
    2.1 rodar no terminal "pip install flask"
    2.2 importar flask "from flask import Flask" no "main.py"
    2.3 criar variável "app" recebendo "Flask(__name__)"


3. CRIAR ROTAS
    3.1 Instanciar @app.route("/") para home
    3.2 Criar função para carregar o template logo abaixo def home():
    3.3 Definir um return de texto return "Meu site no ar! Home"
    3.4 Criar outra rota "blog" para exemplificar
    3.5 Adicionar "app.run()" no fim do arquivo


4. CRIAR ARQUIVO "routes.py"
    4.1 importar app no arquivo: "from main import app"
    4.2 transferir rotas para o arquivo
    4.3 importar rotas após criação do app no "main.py" após a criação do app


5. EXPLICAR COMO GUARDAR HTML E CSS
    5.1 criar pastas "templates" e "static"
    5.2 criar "home.html" e "blog.html" dentro da pasta templates
    5.3 criar "style.css" dentro da pasta static
    5.4 colocar estilos do meu repository tutorial_flask


6. EXPLICAR COMO RENDERIZAR TEMPLATES
    6.1 no arquivo de rotas, importe "from flask import render_template""
    6.2 alterar returns para "return render_template("nome.html")

FIM TUTORIAL.


PROJETO: 

7. CRIAR BANCO DE DADOS "task_manager" com Xampp


8. INSTALAR BIBLIOTECAS DE BANCO DE DADOS
    8.1 pip install Flask-SQLAlchemy 
    8.2 pip install pymysql 


9. CRIAR ARQUIVO "config.py"
    9.1 inserir: 
        class Config:
            SQLALCHEMY_DATABASE_URL = 'mysql+pymysql://root@localhost/task_manager'


10. CRIAR TABELA Task
    10.1 criar arquivo models.py
    10.2 importar "from main import db"
    10.3 criar classe "class Task(db.Model):"
    10.4 criar atributos id, name, description, creation_date, is_completed, completion_date
    10.5 importar no topo "from sqlalchemy.sql import func"
    10.6 ver no meu notebook as colunas


11. VOLTE PARA O "main.py" 
    11.1 import "from flask_sqlalchemy import SQLAlchemy" e abaixo das rotas "from models import *"
    11.2 abaixo do app = Flask(__name__), coloque "app.config.from_object('config.Config')"
    11.3 depois coloque "db = SQLAlchemy(app)" 
    11.4 abaixo das importações de rotas e models coloque: 
            with app.app_context():
                db.create_all()
            app.run()


- Mostrar tabela sendo criada
- deletar templates atuais

12. DEFINIR TEMPLATES VERDADEIROS - meu github tutorial_flask
    12.1 html's atuais
    12.2 explicar templates 


13. CONFIGURAR "routes.py"
    13.1 adicionar db ao import da main "from main import app, db"
    13.2 importar model Task "from models import Task"
    13.3 apagar rotas do tutorial


14. CRIAR ROTA PARA index (ver meu notebook)
    14.1 explicar index


15. CRIAR ROTA PARA CRIAR Task
    15.1 adicionar "from flask import render_template, request, redirect, url_for" 
    15.2 ver no meu notebook como criar rota


16. CRIAR BOTÕES PARA TASKS
    16.1 ver meu github flask_task_manager


17. CRIAR RESTANTE DAS ROTAS
    17.1 ver meu github flask_task_manager


FIM PROJETO.